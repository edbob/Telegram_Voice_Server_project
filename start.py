import asyncio
import sys
import os
import signal

BASE_DIR = os.path.dirname(os.path.abspath(__file__))

# –•—Ä–∞–Ω–∏–º –ø—Ä–æ—Ü–µ—Å—Å—ã, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∏—Ö –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
processes = []

async def run_process(name, path):
    print(f"üöÄ –ó–∞–ø—É—Å–∫ {name}...")
    process = await asyncio.create_subprocess_exec(sys.executable, path)
    processes.append(process)
    await process.wait()

async def main():
    server_path = os.path.join(BASE_DIR, "server", "app.py")
    telegram_bot_path = os.path.join(BASE_DIR, "bot", "telegram_bot.py")
    menu_bot_path = os.path.join(BASE_DIR, "bot", "menu_bot.py")

    await asyncio.gather(
        run_process("Flask —Å–µ—Ä–≤–µ—Ä–∞", server_path),
        run_process("–ì–æ–ª–æ—Å–æ–≤–æ–≥–æ –±–æ—Ç–∞", telegram_bot_path),
        run_process("–ú–µ–Ω—é-–±–æ—Ç–∞", menu_bot_path),
    )

def stop_all():
    print("\n‚èπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
    for proc in processes:
        if proc.returncode is None:  # –ø—Ä–æ—Ü–µ—Å—Å –µ—â—ë —Ä–∞–±–æ—Ç–∞–µ—Ç
            try:
                proc.terminate()  # –º—è–≥–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
            except ProcessLookupError:
                pass
    print("‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã.")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        stop_all()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        stop_all()