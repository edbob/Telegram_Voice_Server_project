from flask import Flask, request, render_template, jsonify, send_from_directory
import os
import shutil
from datetime import datetime
from flask import Response
from queue import Queue


app = Flask(__name__, static_folder='static', template_folder='templates')

UPLOAD_FOLDER = os.path.join(app.root_path, 'uploads')
VOICE_FOLDER = os.path.join(app.root_path, 'static', 'voice')

# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –Ω—É–∂–Ω—ã–µ –ø–∞–ø–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
os.makedirs(VOICE_FOLDER, exist_ok=True)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/api/messages')
def get_messages():
    files = os.listdir(VOICE_FOLDER)
    files = [f for f in files if f.endswith('.ogg')]
    
    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–≤–µ—Ä—Ö—É)
    files = sorted(files, key=lambda f: os.path.getctime(os.path.join(VOICE_FOLDER, f)), reverse=True)

    latest = files[:10]
    messages = []
    for f in latest:
        path = os.path.join(VOICE_FOLDER, f)
        created = datetime.fromtimestamp(os.path.getctime(path)).strftime('%Y-%m-%d %H:%M:%S')
        messages.append({
            'filename': f,
            'url': f'/static/voice/{f}',
            'date': created,
            'source': '–¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª XYZ'  # ‚Üê –ø–æ–∑–∂–µ –º–æ–∂–Ω–æ —á–∏—Ç–∞—Ç—å –∏–∑ –±–∞–∑—ã
        })

    return jsonify(messages)

subscribers = []

@app.route('/events')
def sse():
    def event_stream(q):
        while True:
            data = q.get()
            yield f"data: {data}\n\n"

    q = Queue()
    subscribers.append(q)
    return Response(event_stream(q), mimetype="text/event-stream")

def notify_clients():
    for q in subscribers:
        q.put('new_message')

@app.route('/upload', methods=['POST'])
def upload_file():
    if 'file' not in request.files:
        return '–ù–µ—Ç —Ñ–∞–π–ª–∞!', 400

    file = request.files['file']
    if file.filename == '':
        return '–ü—É—Å—Ç–æ–µ –∏–º—è —Ñ–∞–π–ª–∞', 400

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–Ω–∞—á–∞–ª–∞ –≤ uploads/
    save_path = os.path.join(UPLOAD_FOLDER, file.filename)
    file.save(save_path)

    # –ö–æ–ø–∏—Ä—É–µ–º –≤ static/voice/
    static_path = os.path.join(VOICE_FOLDER, file.filename)
    shutil.copy(save_path, static_path)

    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {save_path}")
    print(f"üìÅ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤: {static_path}")
    notify_clients()
    return '–§–∞–π–ª –ø–æ–ª—É—á–µ–Ω', 200

if __name__ == "__main__":
    app.run(debug=True)
