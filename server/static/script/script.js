// –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è
function isAutoplayEnabled() {
    return localStorage.getItem('autoplayEnabled') !== 'false'; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ
}

function toggleAutoplay() {
    const current = isAutoplayEnabled();
    localStorage.setItem('autoplayEnabled', (!current).toString());
    updateAutoplayButton();
}

function updateAutoplayButton() {
    const btn = document.getElementById('autoplay-toggle');
    const enabled = isAutoplayEnabled();

    btn.textContent = enabled
        ? 'üîä –ê–≤—Ç–æ–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ: –í–ö–õ'
        : 'üîá –ê–≤—Ç–æ–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ: –í–´–ö–õ';

    // –î–æ–±–∞–≤–∏–º/—É–¥–∞–ª–∏–º –∫–ª–∞—Å—Å 'off' –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∫–Ω–æ–ø–∫–∏
    btn.classList.toggle('off', !enabled);
}

// –†–∞–±–æ—Ç–∞ —Å –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º–∏
function getReadMessages() {
    const stored = localStorage.getItem('readMessages');
    return stored ? JSON.parse(stored) : [];
}

function markAsRead(filename) {
    const read = getReadMessages();
    if (!read.includes(filename)) {
        read.push(filename);
        localStorage.setItem('readMessages', JSON.stringify(read));
    }
}

async function fetchMessages() {
    const res = await fetch('/api/messages');
    const data = await res.json();

    const container = document.getElementById('messages');
    container.innerHTML = '';

    const readMessages = getReadMessages();

    data.forEach((msg, index) => {
        const isRead = readMessages.includes(msg.filename);

        const div = document.createElement('div');
        div.className = 'message ' + (isRead ? 'read' : 'unread');

        div.innerHTML = `
            <audio controls src="${msg.url}"></audio><br>
            <span class="date">–î–æ–±–∞–≤–ª–µ–Ω–æ: ${msg.date} | –ò—Å—Ç–æ—á–Ω–∏–∫: ${msg.source || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
        `;

        container.appendChild(div);

        const audio = div.querySelector('audio');

        // –ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ
        if (index === 0 && !isRead && isAutoplayEnabled()) {
            audio.play().then(() => {
                markAsRead(msg.filename);
                div.classList.remove('unread');
                div.classList.add('read');
            }).catch(err => {
                console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏:", err);
            });
        }

        // –†—É—á–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        audio.addEventListener('play', () => {
            if (!readMessages.includes(msg.filename)) {
                markAsRead(msg.filename);
                div.classList.remove('unread');
                div.classList.add('read');
            }
        });
    });
}

// SSE
const eventSource = new EventSource('/events');
eventSource.onmessage = function(event) {
    if (event.data === 'new_message') {
        fetchMessages();
    }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏
document.getElementById('autoplay-toggle').addEventListener('click', toggleAutoplay);

// –ü–µ—Ä–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
updateAutoplayButton();
fetchMessages();